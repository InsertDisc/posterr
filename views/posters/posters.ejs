<div id="myCarousel" data-interval="<%=globals.slideDuration%>" data-pause="false" class="carousel slide <%=globals.fadeTransition%> h-100 w-100"
     data-ride="carousel">
    <div class="carousel-inner h-100 w-100 ">
        <% globals.cards.forEach(function(card) { %>
        <%-card.rendered%>
        <%});%>
    </div>
</div>

<script language='javascript'>
  var initialLoadTime = new Date().getTime();

  $(function () {
    
    // make banner link to settings
    $(".bannerBigText").click(function() {
      window.location = "/settings"; 
      return false;
    });


    // resize for initial page load
    $('.myDiv').css({
      'height': (($(window).height()) - 120) + 'px'
    });

    StopAllAudio();
    //trigger initial audio play if present
    if (document.getElementById("audio1")) {
      var x = document.getElementById("audio1");
      x.play().catch(e => {
        // ignore promise errors when paused during play
        //console.warn(e);
      });
    }

    // pause on itial slide for 4 seconds to allow poster load
    waitforload(1000, 1);

    // check if on single card
    var numOfCards;
    numOfCards = <%=globals.cards.length %> ;
    // if on 1 or less cards then we need to trigger a manual refresh every slide transition period
    if (numOfCards < 2) {
      // check every 5 seconds to see if ready for refresh
      const interval = setInterval(function () {
        if (new Date().getTime() - initialLoadTime > <%=globals.slideDuration %> ) {
          window.location.reload();
        }
      }, 5000);
    }
  });

  async function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  // generic sleep function
  async function waitforload(delay, id) {
    await sleep(delay);

    // resize banner and progress bar based upon poster size
    Resize(id);
  }

  // Calculate width and placement of progress bar
  function Resize(id) {
    // assign vars and get middle panel dimensions
    var midHeight = window.innerHeight * .84;
    var midWidth = window.innerWidth;
    var posterHeight;
    var posterWidth;
    var ar = parseFloat($('#poster' + id + 'AR').text());
    var progressOffset;

    // Calculate poster width for progress indicator and top offset position
    switch (ar) {
      case 1: // album art
        if(midWidth >= midHeight){
          posterHeight = midHeight;
          posterWidth = midHeight;
          progressOffset = 0;
        }
        else {
          posterHeight = midWidth;
          posterWidth = midWidth;
          progressOffset = (midHeight - posterHeight) / 2;
        }
        break;
      case 1.47: // Most movie / tv posters
        posterHeight = midHeight;
        posterWidth = midHeight / ar;
        progressOffset = 0;
        break;
      default: // default to less used movie/tv poster size (often 1.5, but 1.47 still ok to use)
        posterHeight = midHeight;
        posterWidth = midHeight / ar;
        progressOffset = 0;
        break;
    }

    if (posterWidth > 0) {
      if ($('#progress' + id).hasClass('hidden')) {
      } else {
        $('#progress' + id).css({
          'width': posterWidth + 'px',
          'position': 'relative',
          'top': progressOffset + 'px'
        });
      }
    }
  }

  // resize when window resizes
  $(window).bind('resize', function () {
    if(window.innerHeight <= 650) {
      $('.banners').css({
        'background-color': 'red'
      })
    }
    else {
      $('.banners').css({
        'background-color': '#18180d'
      })
      location.reload();
    }
  });

  // pause carouselwhilst any videos are playing
  // [TODO!!! - ]
  $('#myCarousel').on('slid.bs.carousel', function (ev) {
    StopAllAudio();
    var id = ev.relatedTarget.id;

    // if the refresh period has been met, then reload
    //console.log((new Date().getTime() - initialLoadTime) / 1000);
    if (new Date().getTime() - initialLoadTime > <%=globals.refreshPeriod %> ) {
      window.location.reload();
    }


    //console.log('sliding to item:', id); // do something...
    if (document.getElementById("audio" + id)) {
      var x = document.getElementById("audio" + id);
      x.play().catch(e => {
        // ignore promise errors when paused during play
      });
    }

    // resize everything after move to new slide
    waitforload(0, id);

    /*         if (substr(id, 3).toLower() == 'vid') {
              console.log('pausing carousel and starting video');
              setTimeout(function () {
                $('#myCarousel').carousel('pause');
              }, 1)
              player.playVideo();
            } */
  });

  function StopAllAudio() {
    $('audio').each(function () {
      try {
        this.pause(); // Stop playing
        this.currentTime = 0; // Reset time
      } catch (err) {
        //console.warn(err);
      }
    });
  }

  //  });
</script>
